//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlogSite
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BlogDBEntities : DbContext
    {
        public BlogDBEntities()
            : base("name=BlogDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Access> Access { get; set; }
        public virtual DbSet<Category> Category { get; set; }
        public virtual DbSet<Image> Image { get; set; }
        public virtual DbSet<Post> Post { get; set; }
        public virtual DbSet<PostAction> PostAction { get; set; }
        public virtual DbSet<PostLogEntry> PostLogEntry { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<State> State { get; set; }
        public virtual DbSet<Tag> Tag { get; set; }
        public virtual DbSet<User> User { get; set; }
    
        public virtual int AddBlogEntry(Nullable<int> userId, Nullable<int> categoryId, string headline, string content)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var headlineParameter = headline != null ?
                new ObjectParameter("Headline", headline) :
                new ObjectParameter("Headline", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddBlogEntry", userIdParameter, categoryIdParameter, headlineParameter, contentParameter);
        }
    
        public virtual int AddBlogEntryWithImage(Nullable<int> userId, Nullable<int> categoryId, string headline, string content, byte[] imageData)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var headlineParameter = headline != null ?
                new ObjectParameter("Headline", headline) :
                new ObjectParameter("Headline", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var imageDataParameter = imageData != null ?
                new ObjectParameter("ImageData", imageData) :
                new ObjectParameter("ImageData", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddBlogEntryWithImage", userIdParameter, categoryIdParameter, headlineParameter, contentParameter, imageDataParameter);
        }
    }
}
